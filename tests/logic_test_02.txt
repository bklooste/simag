professor[$Lucy]
dean[$John]
student[$Bill]
:forall:x: (professor[x] => person[x])
:forall:x: (dean[x] => professor[x])
:forall:x,y: (professor[x] && dean[y] => <friend[y,x]> || ~<knows[x,y]>)
:forall:x: (:exists:y: (<friend[x,y]>))
:forall:x: (:forall:y: (person[x] && person[y] && (<criticize[x,y]> ~<friend[y,x]>)))
<criticize[$Lucy,$John]>
:forall:x: (student[x] => smart[x])
:exists:x: (student[x])
:exists:x: (student[x] && smart[x])
:forall:x: (student[x] => :exists:y: (student[y] && <loves[x,y]>))
:forall:x: (student[x] => :exists:y: (student[y] && ~<eq[x,y]> && <loves(x,y)>))
:exists:x: (student[x] && :forall:y: (student[y] && ~<eq[x,y]> => <loves[x,y]>))
<takes[$Bill,$analysis]> <=> ~<takes[$Bill,$geometry]>
<takes[$Bill,$analysis]> || <takes[$Bill,$geometry]>
<takes[$Bill,$analysis]> && <takes[$Bill,$geometry]>
~<takes[$Bill,$analysis]>
~:exists::x (student[x] && <loves[x,$Bill]>)
:exists:x: (sister[x,$Bill])
~:exists::x (sister[x,$Bill])
:forall:x,y: (sister[x,$Bill] && sister[y,$Bill] => <eq[x,y]>)
:exists:x: (sister[x,$Bill] && :forall:y: (sister[y,$Bill] => <eq[x,y]>))
:exists:x,y: (sister[x,$Bill] && sister[y,$Bill] && ~<eq[x,y]>)
:forall:x: (student[x] => :exists:y: (course[y] && <takes[x,y]>))
:exists:x: (student[x] && <fails[x,$history]> && :forall:y: (student(y) && <fails[y,history]> => <eq[x,y]>))
~:exists:x: (student[x] && <failed[x,$chemistry]>) && :exists:x: (student[x] && <failed[x,$history]>)
:forall:x: (student[x] && <takes[x,$analysis]> => <takes[x,$geometry]>)
~:exists:x: (student[x] && :forall:y: (student[y] && ~<eq[x,y]> => <fool[x,y]>))